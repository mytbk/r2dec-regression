    ; assembly                              | /* r2dec pseudo C output */
                                            | #include <stdint.h>
                                            | 
(fcn) main                                  | int32_t main () {
    0x000005fa  push rbp                    | 
    0x000005fb  mov rbp, rsp                | 
    0x000005fe  mov dword [rbp - 0x14], edi |     *((int32_t*) local_14h) = edi;
    0x00000601  mov qword [rbp - 0x20], rsi |     *((int64_t*) local_20h) = rsi;
    0x00000605  mov dword [rbp - 4], 0      |     *((int32_t*) local_4h) = 0;
    0x0000060c  jmp 0x612                   | 
                                            |     while (*((int32_t*) local_4h) <= 0x8f) {
    0x0000060e  add dword [rbp - 4], 0x50   |         *((int32_t*) local_4h) += 0x50;
    0x00000612  cmp dword [rbp - 4], 0x8f   | 
                                            |     }
    0x00000619  jle 0x60e                   | 
    0x0000061b  mov eax, 0                  |     eax = 0;
    0x00000620  pop rbp                     | 
    0x00000621  ret                         |     return eax;
                                            | }
