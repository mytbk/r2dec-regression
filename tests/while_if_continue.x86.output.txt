    ; assembly                               | /* r2dec pseudo C output */
                                             | #include <stdint.h>
                                             |
(fcn) main:                                  | int32_t main (int32_t arg1, int32_t arg2) {
                                             |     int32_t local_20h;
                                             |     int32_t local_14h;
                                             |     signed int local_4h;
    0x000005fa  push rbp                     |
    0x000005fb  mov rbp, rsp                 |
                                             |     /* arg1 */
    0x000005fe  mov dword [rbp - 0x14], edi  |     local_14h = edi;
                                             |     /* arg2 */
    0x00000601  mov qword [rbp - 0x20], rsi  |     local_20h = rsi;
    0x00000605  mov dword [rbp - 4], 0       |     local_4h = 0;
    0x0000060c  jmp 0x61e                    |
                                             |     while (local_4h <= 0x8f) {
    0x0000060e  cmp dword [rbp - 4], 0x40    |
                                             |         if (local_4h > 0x40) {
    0x00000612  jle 0x61a                    |
    0x00000614  add dword [rbp - 4], 7       |             local_4h += 7;
    0x00000618  jmp 0x61e                    |
                                             |         }
                                             |         else {
    0x0000061a  add dword [rbp - 4], 0x10    |             local_4h += 0x10;
                                             |         }
    0x0000061e  cmp dword [rbp - 4], 0x8f    |
                                             |     }
    0x00000625  jle 0x60e                    |
    0x00000627  add dword [rbp - 4], 0x15    |     local_4h += 0x15;
    0x0000062b  mov eax, 0                   |     eax = 0;
    0x00000630  pop rbp                      |
    0x00000631  ret                          |     return eax;
                                             | }
